font awesome.io(다운로드)
fontawesome은 font형태로 아이콘을 만들어 사용하는 기능.
bootstrap에서는 *glificon*
보기에는 이미지로 나타나 있으나, 실제로는 *폰트의 역할*을 하기 때문에
크기조정(font-size), 색상(color)

단위
웹에서 사용할 수 있는 수치의 표현
px pt em rem vw vh % .....
최초의 설정에서 (:root)16px == 12pt == 100% == 1em == 1rem

기본은 px을 많이 사용하다,
반응형웹과 일명 픽셀(레티나디스플레이)의 발달로 인해 좀더 복잡한 단위가 생성되게 되면서
과거 em 단위를 폰트의 크기 단위로 많이 사용했으나, 여러 사용상의 문제들이 발생하면서
rem단위의 사용이 늘었음(현재는 rem단위가 좀더 사용률이 높음)


-----------------------------------------------------------------------
선택자
___
  전체 선택자
* { } : 모든것을 선택하는 선택자(반응속도에서 문제가 있어 많이 사용x)


  요소(type)
tag { } : html의 body영역의 태그를 선택하는 선택자


  id,
#idName{ } : 태그요소중 속성명이 id를 뜻하는 것의 앞에 #기호를 붙이고,
해당하는 속성명을 이어서 붙여 선택


  class
.class_name { } : 태그요소중 속성명이 class를 뜻하는 것의 앞에 .기호를 붙이고,
해당하는 속성명을 이어서 붙여 선택


  자손 선택자
#wrap   tag { } : 태그(tag) | id | class 등의 형태의 뒤에 띄어쓰기를 사용하고
그 자손의 요소형태를 작성하여 선택(*자식요소, 자손요소 모두 선택)


  자식 선택자
#wrap > tag { } : 태그(tag) | id | class 등의 형태의 뒤에 &gt;를 사용하고
그 자식의 요소형태를 작성하여 선택(*선택자의 작성이 매우 길어짐)


  가상 선택자
 * ::before {content:" "; }
 * ::after {content:" "; }
요소의 앞(before) 또는 뒤(after)에 실제로 존재하지않는 가상의 요소를
생성하여 사용하는 선택자
반드시 속성의 기능에 content:" ";를 작성해야한다.
가상선택자는 기본 형태가 display:inline;


  상태 선택자
 * tag:hover{}
 * tag:active{}
 * tag:visited{}
 * checkbox:checked{}, radio:checked{}
 * select:selected { }
태그 또는 요소의 기능과 밀접한 관계가 있으며,
그에 따른 상태의 기능을 판단하여 처리하고자할때 사용하는 선택자


  속성 선택자
태그(요소)의 속성을 기준으로 판단하는 선택자 속성을 뜻하는 기호는 [ ] 이며,
기호 내부에 속성을 그대로 입력하면 된다!
<body>
 <style scope>
   code[class="test1"]{}
 </style>

   <code class="test1"></code>
</body>

 * code[href="aaa"]{ } : code태그의 속성명href이며, 그 값 aaa인것을 선택
 * code[href^="aaa"]{ } : code태그의 속성명href이며, 그 값이 aaa로 시작하는 것 선택
 * code[href$="aaa"]{ } : code태그의 속성명href이며, 그 값이 **aaa로 끝나는 것 선택
 * code[href!="aaa"]{ } : code태그의 속성명href이며, 그 값이 **aaa가 아닌 것을 선택
 * code[href*="aaa"]{ } : code태그의 속성명href이며, 그 값이 aaa를 포함하는 모든 것
 * code[href|="aaa"]{ } : code태그의 속성명href이며, 그 값이 aaa를(단,aaa는 단어로 구성) 포함하는 모든 것


<body>
 <style scope>
   a{color:#fa0;}         /* a태그의 글씨색을 노란색 */
   a[href*="//"]{color:#0af;}    /* a의 속성명 href이며, 값에 `//` 표시 있는 모든것 */
   a[href$="com"]{color:#0af;}   /* a의 속성명 href이며, 값끝이 'com'으로 끝나는 것 */
   a[href^="http"]{color:#878;}  /* a의 속성명 href이며, 값시작 'http'인것 */
   a[href!="http"]{color:#878;}  /* a의 속성명 href이며, 값이 'http'가 아닌것 */
 </style>

   <a href="http://naver.com">naver</a>
   <a href="http://daum.net">naver</a>
   <a href="http://github.com">naver</a>
   <a href="#test">naver</a>
</body>


  형제 선택자
 * 인접 형제 선택자 + : 동일한 레벨(형제) 에서 바로아래의 형제(동생)를 선택
 * 형제 선택자 - : 동일한 레벨(형제)에서 동생을 선택
   형제선택자는 동일한 레벨에서만 선택이 가능하며, 먼저 작성된 선택자에서 후에 작성된 형제로 진행만 가능하다.


  nth 선택자
 * li:nth-child() { }
   * li:first-child{ }
   * li:last-child{ }
 * code:nth-of-type() { }
   * code:first-of-type{ }
   * code:last-of-type{ }

짝: even / 홀: odd
2n, 3n, 4n : 2마다 3마다 4째마다
4n-1 : 4번째 중 3번째 마다
4n+2 : 4번째 중 2번째 마다


-----------------------------------------------------------------------
{ background-image }
IE 10 png24 지원안되지만 image붙이면 지원됨.

이미지 :jpg     gif      png
        용량적음 컬러낮음 컬러높음
	투명x    투명0    투명0
                 움짤

[css2]
{ background-color }

{ background-image : url(img_flwr.gif);

{ background-repeat: no-repeat;
		   repeat-x;
		   repeat-y;

{ background-position: right bottom, left top;

{ background-attachment : scroll;
			fixed;


[css3]
{ background-size : 80px 60px;

{ background-image : linear-gradient(  );

{ background-image : radial-gradient(  );

이미지 여러장 사용 가능(css2와 비교하면)